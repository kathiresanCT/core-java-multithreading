package com.pc;

class Message {

	String data = null;

	synchronized void produce() {
		while(data==null) {
			data = "hello";	
			notify();
		}
		
			try {
				wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		
		
	}

	synchronized String consume() {
	while(data==null) {
		try 
        {
              wait();
        }
        catch (InterruptedException ie) 
        {
     	   System.out.println("excep");
        }
	}
	notify();
	return data;
	}
}

class Consumer extends Thread {
	Message message=null;
	
	public Consumer(Message m) {
		System.out.println(m.consume());
	}
	
	

	
}
class Producer extends Thread{
	Message message=null;
	public Producer(Message message) {
		this.message=message;
	}
	public void run() {
		message.produce();
		try 
        {
              sleep((int)(Math.random() * 100));
        } 
        catch (InterruptedException ie) 
        {
              ie.printStackTrace();
        }
	}
}
	
	class TestProducerConsumerProblem{
		
		public static void main(String a[]) {
			Message m=new Message();
			Producer p=new Producer(m);
			Consumer c=new Consumer(m);
			p.start();
			c.start();
			
		}
		
	}
